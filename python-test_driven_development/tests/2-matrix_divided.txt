    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

    >>> matrixX = [[1, 2, 3], [4, 5, 6], [7, 8, 9, 10]]
    >>> matriceY = [[11, 12, 13], [14, 15, 16]]

    >>> matrix_divided(matrixX, 3)
    [[0.33, 0.66, 1], [1.33, 1.66, 2], [2.33, 2.66, 3, 3.33]]

    >>> matrix_divided(matrixY, 4)
    [[2.75, 3, 3.25], [3.5, 3.75, 4]]
     
     >>> input error

     none = None
     empty_list = []
     empty_lists = [], [], []
     not_list = [13, [14, 0], [15, 16, 17]]
     not_all_num = [[bref, 15, 20], [car, 5, 16], [red, 1, 2]]
     diff_len = [[1, 3,], [5, 7, 9], [11, 13, 15, 17]]

     >>> matrix_divided(none, 3)
     Traceback (most recent last call)
     TypeError : matrix must be a matrix (list of lists) of integers/floats

     >>>  matrix_divided(empty_list, 4)
     Traceback (most recent last call)
     TypeError : matrix must be a matrix (list of lists) of integers/floats

     >>> matrix_divided(empty_lists, 3)
     Traceback (most recent last call)
     TypeError : matrix must be a matrix (list of lists) of integers/floats

     >>> matrix_divided(not_all_num, 4)
     Traceback (most recent last call)
     TypeError : matrix must be a matrix (list of lists) of integers/floats

     >>> matrix_divided(diff_len, 3)
     Traceback (most recent last call)
     TypeError : Each row of the matrix must have the same size 

     >>> print(matrix_divided(matrixX, 0))
     Traceback (most recent last call)
     ZeroDivisionError : division by zero